[{
    "value": "general:border_size",
    "description": "size of the border around windows",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 20
    }
},
{
    "value": "general:no_border_on_floating",
    "description": "disable borders for floating windows",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "general:gaps_in",
    "description": "gaps between windows supports css style gaps (top, right, bottom, left -> 5 10 15 20)",


    "type": 3,
    "flags": 0,
    "data": {
             "value": "5"
    }
},
{
    "value": "general:gaps_out",
    "description": "gaps between windows css style gaps (top, right, bottom, left -> 5 10 15 20)",


    "type": 3,
    "flags": 0,
    "data": {
             "value": "20"
    }
},
{
    "value": "general:gaps_workspaces",
    "description": "gaps between workspaces. Stacks with gaps_out.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 100
    }
},
{
    "value": "general:col.inactive_border",
    "description": "border color for inactive windows",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0xff444444"
    }
},
{
    "value": "general:col.active_border",
    "description": "border color for the active window",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0xffffffff"
    }
},
{
    "value": "general:col.nogroup_border",
    "description": "inactive border color for window that cannot be added to a group (see denywindowfromgroup dispatcher)",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0xffffaaff"
    }
},
{
    "value": "general:col.nogroup_border_active",
    "description": "active border color for window that cannot be added to a group",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0xffff00ff"
    }
},
{
    "value": "general:layout",
    "description": "which layout to use. [dwindle/master]",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "dwindle"
    }
},
{
    "value": "general:no_focus_fallback",
    "description": "if true, will not fall back to the next available window when moving focus in a direction where no window was found",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "general:resize_on_border",
    "description": "enables resizing windows by clicking and dragging on borders and gaps",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "general:extend_border_grab_area",
    "description": "extends the area around the border where you can click and drag on, only used when general:resize_on_border is on.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 15,
        "min": 0,
        "max": 100
    }
},
{
    "value": "general:hover_icon_on_border",
    "description": "show a cursor icon when hovering over borders, only used when general:resize_on_border is on.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "general:allow_tearing",
    "description": "master switch for allowing tearing to occur. See the Tearing page.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "general:resize_corner",
    "description": "force floating windows to use a specific corner when being resized (1-4 going clockwise from top left, 0 to disable)",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 4
    }
},
{
    "value": "general:snap:enabled",
    "description": "enable snapping for floating windows",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "general:snap:window_gap",
    "description": "minimum gap in pixels between windows before snapping",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 10,
        "min": 0,
        "max": 100
    }
},
{
    "value": "general:snap:monitor_gap",
    "description": "minimum gap in pixels between window and monitor edges before snapping",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 10,
        "min": 0,
        "max": 100
    }
},
{
    "value": "general:snap:border_overlap",
    "description": "if true, windows snap such that only one border's worth of space is between them",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "decoration:rounding",
    "description": "rounded corners' radius (in layout px)",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 20
    }
},
{
    "value": "decoration:rounding_power",
    "description": "rouding power of corners (2 is a circle)",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 2,
        "min": 2,
        "max": 10
    }
},
{
    "value": "decoration:active_opacity",
    "description": "opacity of active windows. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:inactive_opacity",
    "description": "opacity of inactive windows. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:fullscreen_opacity",
    "description": "opacity of fullscreen windows. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:shadow:enabled",
    "description": "enable drop shadows on windows",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "decoration:shadow:range",
    "description": "Shadow range (size) in layout px",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 4,
        "min": 0,
        "max": 100
    }
},
{
    "value": "decoration:shadow:render_power",
    "description": "in what power to render the falloff (more power, the faster the falloff) [1 - 4]",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 3,
        "min": 1,
        "max": 4
    }
},
{
    "value": "decoration:shadow:sharp",
    "description": "whether the shadow should be sharp or not. Akin to an infinitely high render power.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "decoration:shadow:ignore_window",
    "description": "if true, the shadow will not be rendered behind the window itself, only around it.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "decoration:shadow:color",
    "description": "shadow's color. Alpha dictates shadow's opacity.",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 3994688026
    }
},
{
    "value": "decoration:shadow:color_inactive",
    "description": "inactive shadow color. (if not set, will fall back to col.shadow)",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 0
    }
},
{
    "value": "decoration:shadow:offset",
    "description": "shadow's rendering offset.",
    "type": 8,
    "flags": 0,
    "data": {
             "x": 0,
        "y": 0,
        "min_x": -250,
        "min_y": -250,
        "max_x": 250,
        "max_y": 250
    }
},
{
    "value": "decoration:shadow:scale",
    "description": "shadow's scale. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:dim_inactive",
    "description": "enables dimming of inactive windows",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "decoration:dim_strength",
    "description": "how much inactive windows should be dimmed [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.5,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:dim_special",
    "description": "how much to dim the rest of the screen by when a special workspace is open. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.2,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:dim_around",
    "description": "how much the dimaround window rule should dim by. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.4,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:screen_shader",
    "description": "screen_shader a path to a custom shader to be applied at the end of rendering. See examples/screenShader.frag for an example.",
    "type": 4,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "decoration:blur:enabled",
    "description": "enable kawase window background blur",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "decoration:blur:size",
    "description": "blur size (distance)",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 8,
        "min": 0,
        "max": 100
    }
},
{
    "value": "decoration:blur:passes",
    "description": "the amount of passes to perform",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 10
    }
},
{
    "value": "decoration:blur:ignore_opacity",
    "description": "make the blur layer ignore the opacity of the window",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "decoration:blur:new_optimizations",
    "description": "whether to enable further optimizations to the blur. Recommended to leave on, as it will massively improve performance.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "decoration:blur:xray",
    "description": "if enabled, floating windows will ignore tiled windows in their blur. Only available if blur_new_optimizations is true. Will reduce overhead on floating blur significantly.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "decoration:blur:noise",
    "description": "how much noise to apply. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.0117,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:blur:contrast",
    "description": "contrast modulation for blur. [0.0 - 2.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.8916,
        "min": 0,
        "max": 2
    }
},
{
    "value": "decoration:blur:brightness",
    "description": "brightness modulation for blur. [0.0 - 2.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.8172,
        "min": 0,
        "max": 2
    }
},
{
    "value": "decoration:blur:vibrancy",
    "description": "Increase saturation of blurred colors. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.1696,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:blur:vibrancy_darkness",
    "description": "How strong the effect of vibrancy is on dark areas . [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:blur:special",
    "description": "whether to blur behind the special workspace (note: expensive)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "decoration:blur:popups",
    "description": "whether to blur popups (e.g. right-click menus)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "decoration:blur:popups_ignorealpha",
    "description": "works like ignorealpha in layer rules. If pixel opacity is below set value, will not blur. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.2,
        "min": 0,
        "max": 1
    }
},
{
    "value": "decoration:blur:input_methods",
    "description": "whether to blur input methods (e.g. fcitx5)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "decoration:blur:input_methods_ignorealpha",
    "description": "works like ignorealpha in layer rules. If pixel opacity is below set value, will not blur. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.2,
        "min": 0,
        "max": 1
    }
},
{
    "value": "animations:enabled",
    "description": "enable animations",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "animations:first_launch_animation",
    "description": "enable first launch animation",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "input:kb_model",
    "description": "Appropriate XKB keymap parameter. See the note below.",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "[[EMPTY]]"
    }
},
{
    "value": "input:kb_layout",
    "description": "Appropriate XKB keymap parameter",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "us"
    }
},
{
    "value": "input:kb_variant",
    "description": "Appropriate XKB keymap parameter",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:kb_options",
    "description": "Appropriate XKB keymap parameter",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:kb_rules",
    "description": "Appropriate XKB keymap parameter",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:kb_file",
    "description": "Appropriate XKB keymap parameter",
    "type": 4,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:numlock_by_default",
    "description": "Engage numlock by default.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:resolve_binds_by_sym",
    "description": "Determines how keybinds act when multiple layouts are used. If false, keybinds will always act as if the first specified layout is active. If true, keybinds specified by symbols are activated when you type the respective symbol with the current layout.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:repeat_rate",
    "description": "The repeat rate for held-down keys, in repeats per second.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 25,
        "min": 0,
        "max": 200
    }
},
{
    "value": "input:repeat_delay",
    "description": "Delay before a held-down key is repeated, in milliseconds.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 600,
        "min": 0,
        "max": 2000
    }
},
{
    "value": "input:sensitivity",
    "description": "Sets the mouse input sensitivity. Value is clamped to the range -1.0 to 1.0.",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0,
        "min": -1,
        "max": 1
    }
},
{
    "value": "input:accel_profile",
    "description": "Sets the cursor acceleration profile. Can be one of adaptive, flat. Can also be custom, see below. Leave empty to use libinput's default mode for your input device. [adaptive/flat/custom]",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:force_no_accel",
    "description": "Force no cursor acceleration. This bypasses most of your pointer settings to get as raw of a signal as possible. Enabling this is not recommended due to potential cursor desynchronization.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:left_handed",
    "description": "Switches RMB and LMB",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:scroll_points",
    "description": "Sets the scroll acceleration profile, when accel_profile is set to custom. Has to be in the form <step> <points>. Leave empty to have a flat scroll curve.",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:scroll_method",
    "description": "Sets the scroll method. Can be one of 2fg (2 fingers), edge, on_button_down, no_scroll. [2fg/edge/on_button_down/no_scroll]",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:scroll_button",
    "description": "Sets the scroll button. Has to be an int, cannot be a string. Check wev if you have any doubts regarding the ID. 0 means default.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 300
    }
},
{
    "value": "input:scroll_button_lock",
    "description": "If the scroll button lock is enabled, the button does not need to be held down. Pressing and releasing the button toggles the button lock, which logically holds the button down or releases it. While the button is logically held down, motion events are converted to scroll events.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:scroll_factor",
    "description": "Multiplier added to scroll movement for external mice. Note that there is a separate setting for touchpad scroll_factor.",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 2
    }
},
{
    "value": "input:natural_scroll",
    "description": "Inverts scrolling direction. When enabled, scrolling moves content directly, rather than manipulating a scrollbar.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:follow_mouse",
    "description": "Specify if and how cursor movement should affect window focus. See the note below. [0/1/2/3]",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 3
    }
},
{
    "value": "input:focus_on_close",
    "description": "Controls the window focus behavior when a window is closed. When set to 0, focus will shift to the next window candidate. When set to 1, focus will shift to the window under the cursor.",
    "type": 6,
    "flags": 0,
    "data": {
             "value": "next,cursor"
    }
},
{
    "value": "input:mouse_refocus",
    "description": "if disabled, mouse focus won't switch to the hovered window unless the mouse crosses a window boundary when follow_mouse=1.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "input:float_switch_override_focus",
    "description": "If enabled (1 or 2), focus will change to the window under the cursor when changing from tiled-to-floating and vice versa. If 2, focus will also follow mouse on float-to-float switches.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 2
    }
},
{
    "value": "input:special_fallthrough",
    "description": "if enabled, having only floating windows in the special workspace will not block focusing windows in the regular workspace.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:off_window_axis_events",
    "description": "Handles axis events around (gaps/border for tiled, dragarea/border for floated) a focused window. 0 ignores axis events 1 sends out-of-bound coordinates 2 fakes pointer coordinates to the closest point inside the window 3 warps the cursor to the closest point inside the window",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 3
    }
},
{
    "value": "input:emulate_discrete_scroll",
    "description": "Emulates discrete scrolling from high resolution scrolling events. 0 disables it, 1 enables handling of non-standard events only, and 2 force enables all scroll wheel events to be handled",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 2
    }
},
{
    "value": "input:touchpad:disable_while_typing",
    "description": "Disable the touchpad while typing.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "input:touchpad:natural_scroll",
    "description": "Inverts scrolling direction. When enabled, scrolling moves content directly, rather than manipulating a scrollbar.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:touchpad:scroll_factor",
    "description": "Multiplier applied to the amount of scroll movement.",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 2
    }
},
{
    "value": "input:touchpad:middle_button_emulation",
    "description": "Sending LMB and RMB simultaneously will be interpreted as a middle click. This disables any touchpad area that would normally send a middle click based on location.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:touchpad:tap_button_map",
    "description": "Sets the tap button mapping for touchpad button emulation. Can be one of lrm (default) or lmr (Left, Middle, Right Buttons). [lrm/lmr]",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:touchpad:clickfinger_behavior",
    "description": "Button presses with 1, 2, or 3 fingers will be mapped to LMB, RMB, and MMB respectively. This disables interpretation of clicks based on location on the touchpad.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:touchpad:tap-to-click",
    "description": "Tapping on the touchpad with 1, 2, or 3 fingers will send LMB, RMB, and MMB respectively.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "input:touchpad:drag_lock",
    "description": "When enabled, lifting the finger off for a short time while dragging will not drop the dragged item.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:touchpad:tap-and-drag",
    "description": "Sets the tap and drag mode for the touchpad",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:touchdevice:transform",
    "description": "Transform the input from touchdevices. The possible transformations are the same as those of the monitors",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 6
    }
},
{
    "value": "input:touchdevice:output",
    "description": "The monitor to bind touch devices. The default is auto-detection. To stop auto-detection, use an empty string or the [[Empty]] value.",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:touchdevice:enabled",
    "description": "Whether input is enabled for touch devices.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "input:tablet:transform",
    "description": "transform the input from tablets. The possible transformations are the same as those of the monitors",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 6
    }
},
{
    "value": "input:tablet:output",
    "description": "the monitor to bind tablets. Can be current or a monitor name. Leave empty to map across all monitors.",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "input:tablet:region_position",
    "description": "position of the mapped region in monitor layout relative to the top left corner of the bound monitor or all monitors.",
    "type": 8,
    "flags": 0,
    "data": {
             "x": 0,
        "y": 0,
        "min_x": -20000,
        "min_y": -20000,
        "max_x": 20000,
        "max_y": 20000
    }
},
{
    "value": "input:tablet:absolute_region_position",
    "description": "whether to treat the region_position as an absolute position in monitor layout. Only applies when output is empty.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:tablet:region_size",
    "description": "size of the mapped region. When this variable is set, tablet input will be mapped to the region. [0, 0] or invalid size means unset.",
    "type": 8,
    "flags": 0,
    "data": {
             "x": 0,
        "y": 0,
        "min_x": -100,
        "min_y": -100,
        "max_x": 4000,
        "max_y": 4000
    }
},
{
    "value": "input:tablet:relative_input",
    "description": "whether the input should be relative",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:tablet:left_handed",
    "description": "if enabled, the tablet will be rotated 180 degrees",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "input:tablet:active_area_size",
    "description": "size of tablet's active area in mm",
    "type": 8,
    "flags": 0,
    "data": {
             "x": 0,
        "y": 0,
        "min_x": 0,
        "min_y": 0,
        "max_x": 500,
        "max_y": 500
    }
},
{
    "value": "input:tablet:active_area_position",
    "description": "position of the active area in mm",
    "type": 8,
    "flags": 0,
    "data": {
             "x": 0,
        "y": 0,
        "min_x": 0,
        "min_y": 0,
        "max_x": 500,
        "max_y": 500
    }
},
{
    "value": "gestures:workspace_swipe",
    "description": "enable workspace swipe gesture on touchpad",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "gestures:workspace_swipe_fingers",
    "description": "how many fingers for the touchpad gesture",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 3,
        "min": 0,
        "max": 5
    }
},
{
    "value": "gestures:workspace_swipe_min_fingers",
    "description": "if enabled, workspace_swipe_fingers is considered the minimum number of fingers to swipe",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "gestures:workspace_swipe_distance",
    "description": "in px, the distance of the touchpad gesture",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 300,
        "min": 0,
        "max": 2000
    }
},
{
    "value": "gestures:workspace_swipe_touch",
    "description": "enable workspace swiping from the edge of a touchscreen",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "gestures:workspace_swipe_invert",
    "description": "invert the direction (touchpad only)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "gestures:workspace_swipe_touch_invert",
    "description": "invert the direction (touchscreen only)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "gestures:workspace_swipe_min_speed_to_force",
    "description": "minimum speed in px per timepoint to force the change ignoring cancel_ratio. Setting to 0 will disable this mechanic.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 30,
        "min": 0,
        "max": 200
    }
},
{
    "value": "gestures:workspace_swipe_cancel_ratio",
    "description": "how much the swipe has to proceed in order to commence it. (0.7 -> if > 0.7 * distance, switch, if less, revert) [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.5,
        "min": 0,
        "max": 1
    }
},
{
    "value": "gestures:workspace_swipe_create_new",
    "description": "whether a swipe right on the last workspace should create a new one.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "gestures:workspace_swipe_direction_lock",
    "description": "if enabled, switching direction will be locked when you swipe past the direction_lock_threshold (touchpad only).",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "gestures:workspace_swipe_direction_lock_threshold",
    "description": "in px, the distance to swipe before direction lock activates (touchpad only).",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 10,
        "min": 0,
        "max": 200
    }
},
{
    "value": "gestures:workspace_swipe_forever",
    "description": "if enabled, swiping will not clamp at the neighboring workspaces but continue to the further ones.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "gestures:workspace_swipe_use_r",
    "description": "if enabled, swiping will use the r prefix instead of the m prefix for finding workspaces.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "group:insert_after_current",
    "description": "whether new windows in a group spawn after current or at group tail",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:focus_removed_window",
    "description": "whether Hyprland should focus on the window that has just been moved out of the group",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:merge_groups_on_drag",
    "description": "whether window groups can be dragged into other groups",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:merge_groups_on_groupbar",
    "description": "whether one group will be merged with another when dragged into its groupbar",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "general:col.border_active",
    "description": "border color for inactive windows",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0x66ffff00"
    }
},
{
    "value": "general:col.border_inactive",
    "description": "border color for the active window",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0x66777700"
    }
},
{
    "value": "general:col.border_locked_active",
    "description": "inactive border color for window that cannot be added to a group (see denywindowfromgroup dispatcher)",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0x66ff5500"
    }
},
{
    "value": "general:col.border_locked_inactive",
    "description": "active border color for window that cannot be added to a group",
    "type": 7,
    "flags": 0,
    "data": {
             "value": "0x66775500"
    }
},
{
    "value": "group:auto_group",
    "description": "automatically group new windows",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:drag_into_group",
    "description": "whether dragging a window into a unlocked group will merge them. Options: 0 (disabled), 1 (enabled), 2 (only when dragging into the groupbar)",
    "type": 6,
    "flags": 0,
    "data": {
             "value": "disabled,enabled,only when dragging into the groupbar"
    }
},
{
    "value": "group:merge_floated_into_tiled_on_groupbar",
    "description": "whether dragging a floating window into a tiled window groupbar will merge them",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "group:group_on_movetoworkspace",
    "description": "whether using movetoworkspace[silent] will merge the window into the workspace's solitary unlocked group",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "group:groupbar:enabled",
    "description": "enables groupbars",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:groupbar:font_family",
    "description": "font used to display groupbar titles, use misc:font_family if not specified",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "[[EMPTY]]"
    }
},
{
    "value": "group:groupbar:font_size",
    "description": "font size of groupbar title",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 8,
        "min": 2,
        "max": 64
    }
},
{
    "value": "group:groupbar:gradients",
    "description": "enables gradients",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:groupbar:height",
    "description": "height of the groupbar",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 14,
        "min": 1,
        "max": 64
    }
},
{
    "value": "group:groupbar:stacked",
    "description": "render the groupbar as a vertical stack",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "group:groupbar:priority",
    "description": "sets the decoration priority for groupbars",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 3,
        "min": 0,
        "max": 6
    }
},
{
    "value": "group:groupbar:render_titles",
    "description": "whether to render titles in the group bar decoration",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:groupbar:scrolling",
    "description": "whether scrolling in the groupbar changes group active window",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "group:groupbar:text_color",
    "description": "controls the group bar text color",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 4294967295
    }
},
{
    "value": "group:groupbar:col.active",
    "description": "active group border color",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 1728052992
    }
},
{
    "value": "group:groupbar:col.inactive",
    "description": "inactive (out of focus) group border color",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 1719105280
    }
},
{
    "value": "group:groupbar:col.locked_active",
    "description": "active locked group border color",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 1728009472
    }
},
{
    "value": "group:groupbar:col.locked_inactive",
    "description": "controls the group bar text color",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 1719096576
    }
},
{
    "value": "misc:disable_hyprland_logo",
    "description": "disables the random Hyprland logo / anime girl background. :(",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:disable_splash_rendering",
    "description": "disables the Hyprland splash rendering. (requires a monitor reload to take effect)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:col.splash",
    "description": "Changes the color of the splash text (requires a monitor reload to take effect).",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 4294967295
    }
},
{
    "value": "misc:font_family",
    "description": "Set the global default font to render the text including debug fps/notification, config error messages and etc., selected from system fonts.",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "Sans"
    }
},
{
    "value": "misc:splash_font_family",
    "description": "Changes the font used to render the splash text, selected from system fonts (requires a monitor reload to take effect).",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "[[EMPTY]]"
    }
},
{
    "value": "misc:force_default_wallpaper",
    "description": "Enforce any of the 3 default wallpapers. Setting this to 0 or 1 disables the anime background. -1 means “random”. [-1/0/1/2]",
    "type": 1,
    "flags": 0,
    "data": {
             "value": -1,
        "min": -1,
        "max": 2
    }
},
{
    "value": "misc:vfr",
    "description": "controls the VFR status of Hyprland. Heavily recommended to leave enabled to conserve resources.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "misc:vrr",
    "description": "controls the VRR (Adaptive Sync) of your monitors. 0 - off, 1 - on, 2 - fullscreen only [0/1/2]",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 2
    }
},
{
    "value": "misc:mouse_move_enables_dpms",
    "description": "If DPMS is set to off, wake up the monitors if the mouse move",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:key_press_enables_dpms",
    "description": "If DPMS is set to off, wake up the monitors if a key is pressed.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:always_follow_on_dnd",
    "description": "Will make mouse focus follow the mouse when drag and dropping. Recommended to leave it enabled, especially for people using focus follows mouse at 0.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "misc:layers_hog_keyboard_focus",
    "description": "If true, will make keyboard-interactive layers keep their focus on mouse move (e.g. wofi, bemenu)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "misc:animate_manual_resizes",
    "description": "If true, will animate manual window resizes/moves",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:animate_mouse_windowdragging",
    "description": "If true, will animate windows being dragged by mouse, note that this can cause weird behavior on some curves",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:disable_autoreload",
    "description": "If true, the config will not reload automatically on save, and instead needs to be reloaded with hyprctl reload. Might save on battery.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:enable_swallow",
    "description": "Enable window swallowing",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:swallow_regex",
    "description": "The class regex to be used for windows that should be swallowed (usually, a terminal). To know more about the list of regex which can be used use this cheatsheet.",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "misc:swallow_exception_regex",
    "description": "The title regex to be used for windows that should not be swallowed by the windows specified in swallow_regex (e.g. wev). The regex is matched against the parent (e.g. Kitty) window’s title on the assumption that it changes to whatever process it’s running.",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "misc:focus_on_activate",
    "description": "Whether Hyprland should focus an app that requests to be focused (an activate request)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:mouse_move_focuses_monitor",
    "description": "Whether mouse moving into a different monitor should focus it",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "misc:render_ahead_of_time",
    "description": "[Warning: buggy] starts rendering before your monitor displays a frame in order to lower latency",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:render_ahead_safezone",
    "description": "how many ms of safezone to add to rendering ahead of time. Recommended 1-2.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 1,
        "max": 10
    }
},
{
    "value": "misc:allow_session_lock_restore",
    "description": "if true, will allow you to restart a lockscreen app in case it crashes (red screen of death)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:background_color",
    "description": "change the background color. (requires enabled disable_hyprland_logo)",
    "type": 5,
    "flags": 0,
    "data": {
             "value": 1118481
    }
},
{
    "value": "misc:close_special_on_empty",
    "description": "close the special workspace if the last window is removed",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "misc:new_window_takes_over_fullscreen",
    "description": "if there is a fullscreen or maximized window, decide whether a new tiled window opened should replace it, stay behind or disable the fullscreen/maximized state. 0 - behind, 1 - takes over, 2 - unfullscreen/unmaxize [0/1/2]",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 2
    }
},
{
    "value": "misc:exit_window_retains_fullscreen",
    "description": "if true, closing a fullscreen window makes the next focused window fullscreen",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:initial_workspace_tracking",
    "description": "if enabled, windows will open on the workspace they were invoked on. 0 - disabled, 1 - single-shot, 2 - persistent (all children too)",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 2
    }
},
{
    "value": "misc:middle_click_paste",
    "description": "whether to enable middle-click-paste (aka primary selection)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "misc:render_unfocused_fps",
    "description": "the maximum limit for renderunfocused windows' fps in the background",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 15,
        "min": 1,
        "max": 120
    }
},
{
    "value": "misc:disable_xdg_env_checks",
    "description": "disable the warning if XDG environment is externally managed",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:disable_hyprland_qtutils_check",
    "description": "disable the warning if hyprland-qtutils is missing",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "misc:lockdead_screen_delay",
    "description": "the delay in ms after the lockdead screen appears if the lock screen did not appear after a lock event occurred.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1000,
        "min": 0,
        "max": 5000
    }
},
{
    "value": "binds:pass_mouse_when_bound",
    "description": "if disabled, will not pass the mouse events to apps / dragging windows around if a keybind has been triggered.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "binds:scroll_event_delay",
    "description": "in ms, how many ms to wait after a scroll event to allow passing another one for the binds.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 300,
        "min": 0,
        "max": 2000
    }
},
{
    "value": "binds:workspace_back_and_forth",
    "description": "If enabled, an attempt to switch to the currently focused workspace will instead switch to the previous workspace. Akin to i3’s auto_back_and_forth.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "binds:allow_workspace_cycles",
    "description": "If enabled, workspaces don’t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "binds:workspace_center_on",
    "description": "Whether switching workspaces should center the cursor on the workspace (0) or on the last active window for that workspace (1)",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 1
    }
},
{
    "value": "binds:focus_preferred_method",
    "description": "sets the preferred focus finding method when using focuswindow/movewindow/etc with a direction. 0 - history (recent have priority), 1 - length (longer shared edges have priority)",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 1
    }
},
{
    "value": "binds:ignore_group_lock",
    "description": "If enabled, dispatchers like moveintogroup, moveoutofgroup and movewindoworgroup will ignore lock per group.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "binds:movefocus_cycles_fullscreen",
    "description": "If enabled, when on a fullscreen window, movefocus will cycle fullscreen, if not, it will move the focus in a direction.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "binds:movefocus_cycles_groupfirst",
    "description": "If enabled, when in a grouped window, movefocus will cycle windows in the groups first, then at each ends of tabs, it'll move on to other windows/groups",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "binds:disable_keybind_grabbing",
    "description": "If enabled, apps that request keybinds to be disabled (e.g. VMs) will not be able to do so.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "binds:window_direction_monitor_fallback",
    "description": "If enabled, moving a window or focus over the edge of a monitor with a direction will move it to the next monitor in that direction.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "binds:allow_pin_fullscreen",
    "description": "Allows fullscreen to pinned windows, and restore their pinned status afterwards",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "xwayland:enabled",
    "description": "allow running applications using X11",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "xwayland:use_nearest_neighbor",
    "description": "uses the nearest neighbor filtering for xwayland apps, making them pixelated rather than blurry",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "xwayland:force_zero_scaling",
    "description": "forces a scale of 1 on xwayland windows on scaled displays.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "opengl:nvidia_anti_flicker",
    "description": "reduces flickering on nvidia at the cost of possible frame drops on lower-end GPUs. On non-nvidia, this is ignored.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "opengl:force_introspection",
    "description": "forces introspection at all times. Introspection is aimed at reducing GPU usage in certain cases, but might cause graphical glitches on nvidia. 0 - nothing, 1 - force always on, 2 - force always on if nvidia",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 2,
        "min": 0,
        "max": 2
    }
},
{
    "value": "render:explicit_sync",
    "description": "Whether to enable explicit sync support. Requires a hyprland restart. 0 - no, 1 - yes, 2 - auto based on the gpu driver",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 2,
        "min": 0,
        "max": 2
    }
},
{
    "value": "render:explicit_sync_kms",
    "description": "Whether to enable explicit sync support for the KMS layer. Requires explicit_sync to be enabled. 0 - no, 1 - yes, 2 - auto based on the gpu driver",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 2,
        "min": 0,
        "max": 2
    }
},
{
    "value": "render:direct_scanout",
    "description": "Enables direct scanout. Direct scanout attempts to reduce lag when there is only one fullscreen application on a screen (e.g. game). It is also recommended to set this to false if the fullscreen application shows graphical glitches.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "render:expand_undersized_textures",
    "description": "Whether to expand textures that have not yet resized to be larger, or to just stretch them instead.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "render:xp_mode",
    "description": "Disable back buffer and bottom layer rendering.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "render:ctm_animation",
    "description": "Whether to enable a fade animation for CTM changes (hyprsunset). 2 means 'auto' (Yes on everything but Nvidia).",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 2,
        "min": 0,
        "max": 2
    }
},
{
    "value": "render:allow_early_buffer_release",
    "description": "Allow early buffer release event. Fixes stuttering and missing frames for some apps. May cause graphical glitches and memory leaks in others",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "cursor:use_nearest_neighbor",
    "description": "sync xcursor theme with gsettings, it applies cursor-theme and cursor-size on theme load to gsettings making most CSD gtk based clients use same xcursor theme and size.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "cursor:no_hardware_cursors",
    "description": "disables hardware cursors",
    "type": 6,
    "flags": 0,
    "data": {
             "value": "Disabled,Enabled,Auto"
    }
},
{
    "value": "cursor:no_break_fs_vrr",
    "description": "disables scheduling new frames on cursor movement for fullscreen apps with VRR enabled to avoid framerate spikes (requires no_hardware_cursors = true)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "cursor:min_refresh_rate",
    "description": "minimum refresh rate for cursor movement when no_break_fs_vrr is active. Set to minimum supported refresh rate or higher",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 24,
        "min": 10,
        "max": 500
    }
},
{
    "value": "cursor:hotspot_padding",
    "description": "the padding, in logical px, between screen edges and the cursor",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 20
    }
},
{
    "value": "cursor:inactive_timeout",
    "description": "in seconds, after how many seconds of cursor’s inactivity to hide it. Set to 0 for never.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 20
    }
},
{
    "value": "cursor:no_warps",
    "description": "if true, will not warp the cursor in many cases (focusing, keybinds, etc)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "cursor:persistent_warps",
    "description": "When a window is refocused, the cursor returns to its last position relative to that window, rather than to the centre.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "cursor:warp_on_change_workspace",
    "description": "Move the cursor to the last focused window after changing the workspace. Options: 0 (Disabled), 1 (Enabled), 2 (Force - ignores cursor:no_warps option)",
    "type": 6,
    "flags": 0,
    "data": {
             "value": "Disabled,Enabled,Force"
    }
},
{
    "value": "cursor:default_monitor",
    "description": "the name of a default monitor for the cursor to be set to on startup (see hyprctl monitors for names)",
    "type": 3,
    "flags": 0,
    "data": {
             "value": ""
    }
},
{
    "value": "cursor:zoom_factor",
    "description": "the factor to zoom by around the cursor. Like a magnifying glass. Minimum 1.0 (meaning no zoom)",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 1,
        "max": 10
    }
},
{
    "value": "cursor:zoom_rigid",
    "description": "whether the zoom should follow the cursor rigidly (cursor is always centered if it can be) or loosely",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "cursor:enable_hyprcursor",
    "description": "whether to enable hyprcursor support",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "cursor:hide_on_key_press",
    "description": "Hides the cursor when you press any key until the mouse is moved.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "cursor:hide_on_touch",
    "description": "Hides the cursor when the last input was a touch input until a mouse input is done.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "cursor:use_cpu_buffer",
    "description": "Makes HW cursors use a CPU buffer. Required on Nvidia to have HW cursors. Experimental",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "debug:overlay",
    "description": "print the debug performance overlay. Disable VFR for accurate results.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "debug:damage_blink",
    "description": "disable logging to a file",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "debug:disable_logs",
    "description": "disable logging to a file",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "debug:disable_time",
    "description": "disables time logging",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "debug:damage_tracking",
    "description": "redraw only the needed bits of the display. Do not change. (default: full - 2) monitor - 1, none - 0",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 2,
        "min": 0,
        "max": 2
    }
},
{
    "value": "debug:enable_stdout_logs",
    "description": "enables logging to stdout",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "debug:manual_crash",
    "description": "set to 1 and then back to 0 to crash Hyprland.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 1
    }
},
{
    "value": "debug:suppress_errors",
    "description": "if true, do not display config file parsing errors.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "debug:watchdog_timeout",
    "description": "sets the timeout in seconds for watchdog to abort processing of a signal of the main thread. Set to 0 to disable.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 5,
        "min": 0,
        "max": 20
    }
},
{
    "value": "debug:disable_scale_checks",
    "description": "disables verification of the scale factors. Will result in pixel alignment and rounding errors.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "debug:error_limit",
    "description": "limits the number of displayed config file parsing errors.",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 5,
        "min": 0,
        "max": 20
    }
},
{
    "value": "debug:error_position",
    "description": "sets the position of the error bar. top - 0, bottom - 1",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 0,
        "min": 0,
        "max": 1
    }
},
{
    "value": "debug:colored_stdout_logs",
    "description": "enables colors in the stdout logs.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "dwindle:pseudotile",
    "description": "enable pseudotiling. Pseudotiled windows retain their floating size when tiled.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "dwindle:force_split",
    "description": "0 -> split follows mouse, 1 -> always split to the left (new = left or top) 2 -> always split to the right (new = right or bottom)",
    "type": 6,
    "flags": 0,
    "data": {
             "value": "follow mouse,left or top,right or bottom"
    }
},
{
    "value": "dwindle:preserve_split",
    "description": "if enabled, the split (side/top) will not change regardless of what happens to the container.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "dwindle:smart_split",
    "description": "if enabled, allows a more precise control over the window split direction based on the cursor's position. The window is conceptually divided into four triangles, and cursor's triangle determines the split direction. This feature also turns on preserve_split.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "dwindle:smart_resizing",
    "description": "if enabled, resizing direction will be determined by the mouse's position on the window (nearest to which corner). Else, it is based on the window's tiling position.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "dwindle:permanent_direction_override",
    "description": "if enabled, makes the preselect direction persist until either this mode is turned off, another direction is specified, or a non-direction is specified (anything other than l,r,u/t,d/b)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "dwindle:special_scale_factor",
    "description": "specifies the scale factor of windows on the special workspace [0 - 1]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 1
    }
},
{
    "value": "dwindle:split_width_multiplier",
    "description": "specifies the auto-split width multiplier",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0.1,
        "max": 3
    }
},
{
    "value": "dwindle:use_active_for_splits",
    "description": "whether to prefer the active window or the mouse position for splits",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "dwindle:default_split_ratio",
    "description": "the default split ratio on window open. 1 means even 50/50 split. [0.1 - 1.9]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0.1,
        "max": 1.9
    }
},
{
    "value": "dwindle:split_bias",
    "description": "specifies which window will receive the larger half of a split. positional - 0, current window - 1, opening window - 2 [0/1/2]",
    "type": 6,
    "flags": 0,
    "data": {
             "value": "positional,current,opening"
    }
},
{
    "value": "master:allow_small_split",
    "description": "enable adding additional master windows in a horizontal split style",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "master:special_scale_factor",
    "description": "the scale of the special workspace windows. [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 1,
        "min": 0,
        "max": 1
    }
},
{
    "value": "master:mfact",
    "description": "the size as a percentage of the master window, for example `mfact = 0.70` would mean 70% of the screen will be the master window, and 30% the slave [0.0 - 1.0]",
    "type": 2,
    "flags": 0,
    "data": {
             "value": 0.55,
        "min": 0,
        "max": 1
    }
},
{
    "value": "master:new_status",
    "description": "`master`: new window becomes master; `slave`: new windows are added to slave stack; `inherit`: inherit from focused window",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "slave"
    }
},
{
    "value": "master:new_on_top",
    "description": "whether a newly open window should be on the top of the stack",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "master:new_on_active",
    "description": "`before`, `after`: place new window relative to the focused window; `none`: place new window according to the value of `new_on_top`. ",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "none"
    }
},
{
    "value": "master:orientation",
    "description": "default placement of the master area, can be left, right, top, bottom or center",
    "type": 3,
    "flags": 0,
    "data": {
             "value": "left"
    }
},
{
    "value": "master:inherit_fullscreen",
    "description": "inherit fullscreen status when cycling/swapping to another window (e.g. monocle layout)",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "master:slave_count_for_center_master",
    "description": "when using orientation=center, make the master window centered only when at least this many slave windows are open. (Set 0 to always_center_master)",
    "type": 1,
    "flags": 0,
    "data": {
             "value": 2,
        "min": 0,
        "max": 10
    }
},
{
    "value": "master:center_master_slaves_on_right",
    "description": "set if the slaves should appear on right of master when slave_count_for_center_master > 2",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "master:center_ignores_reserved",
    "description": "centers the master window on monitor ignoring reserved areas",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "master:smart_resizing",
    "description": "if enabled, resizing direction will be determined by the mouse's position on the window (nearest to which corner). Else, it is based on the window's tiling position.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "master:drop_at_cursor",
    "description": "when enabled, dragging and dropping windows will put them at the cursor position. Otherwise, when dropped at the stack side, they will go to the top/bottom of the stack depending on new_on_top.",
    "type": 0,
    "flags": 0,
    "data": {
             "value": true
    }
},
{
    "value": "experimental:wide_color_gamut",
    "description": "force wide color gamut for all supported outputs",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "experimental:hdr",
    "description": "force static hdr for all supported outputs",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
},
{
    "value": "experimental:xx_color_management_v4",
    "description": "enable color management protocol",
    "type": 0,
    "flags": 0,
    "data": {
             "value": false
    }
}]
